---
kind: Template
apiVersion: v1
metadata:
  name: "${NAME}${SUFFIX}"
  annotations:
    description: Deployment template.
objects:

  # - kind: NetworkSecurityPolicy
  #   apiVersion: secops.pathfinder.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: pods-to-api
  #     labels:
  #       name: pods-to-api
  #       app: ${APP_NAME}
  #       app-group: ${APP_GROUP}
  #       role: ${ROLE}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Allow pods to talk to the internal api so deployments work.
  #       This only needs to be specified once per environment.
  #     source:
  #       - - $namespace=jag-csb-jes-family-protection-order-${TAG_NAME}
  #     destination:
  #       - - int:network=internal-cluster-api-endpoint

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Exposes and load balances the application pods.
    spec:
      ports:
        - name: ${NAME}${SUFFIX}-http
          port: ${{HTTP_PORT}}
          targetPort: ${{HTTP_PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}${SUFFIX}-http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}-www${SUFFIX}
      labels:
        name: ${NAME}-www${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      host: ${APPLICATION_DOMAIN_WWW}
      port:
        targetPort: ${NAME}${SUFFIX}-http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the application.
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_NAMESPACE}"
              name: "${NAME}${SUFFIX}:${TAG_NAME}"
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              image: " "
              ports:
                - containerPort: ${{HTTP_PORT}}
                  protocol: TCP
              readinessProbe:
                initialDelaySeconds: 3
                timeoutSeconds: 30
                httpGet:
                  path: ""
                  port: ${{HTTP_PORT}}
              livenessProbe:
                initialDelaySeconds: 120
                timeoutSeconds: 30
                httpGet:
                  path: ""
                  port: ${{HTTP_PORT}}
              resources:
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the server instance.
    required: true
    value: website
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: ""
  - name: APP_NAME
    displayName: App Name
    description: App Name
    required: true
    value: Cullen-Commission-Website
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: cullen-commission
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: web

  - name: HTTP_PORT
    displayName: Http Port
    description: The http port on which the service will listen.
    required: true
    value: "8080"
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: cullen-commission-dev.pathfinder.gov.bc.ca
  - name: APPLICATION_DOMAIN_WWW
    displayName: Application WWW Hostname
    description: The exposed www. hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: www-cullen-commission-dev.pathfinder.gov.bc.ca

  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: kyrwwq-tools
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: dev

  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: '3'
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: '6'

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 256Mi