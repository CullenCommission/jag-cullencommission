{"version":3,"sources":["constants/logCSS.js","reducers/mainReducer.js","constants/actionTypes.js","components/Month.jsx","App.jsx","actions/actions.js","serviceWorker.js","index.js"],"names":["WARNING","SUCCESS","cl","msg","css","console","log","initState","isInit","isDev","hearings","mainReducer","state","action","current","Object","assign","type","undefined","hearingsData","Logger","Map","tmpHearings","entries","hearing","preppedHearing","themes","set","Month","props","display","this","setState","mainHeight","iconDirection","className","hearingLinks","videos","length","push","key","timeStamp","Date","format","href","onClick","handleMainDisplay","bind","style","float","name","duration","height","React","Component","connect","dispatch","axios","require","App","replace","results","RegExp","exec","window","location","search","decodeURIComponent","isDevHeader","borderRadius","fontWeight","fontSize","textAlign","textTransform","color","backgroundColor","padding","position","top","left","textShadow","transform","width","months2020","monthName","has","get","monthList","month","id","getUrlParameter","url","then","res","initApp","data","initAppAction","Boolean","hostname","match","store","createStore","main","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kMACaA,EAAU,mCAEVC,EAAU,kCAGhB,SAASC,EAAGC,EAAKC,GACpBC,QAAQC,IAAI,KAAOH,EAAKC,GCJ5B,IAAMG,EAAY,CACdC,QAAQ,EACRC,OAAO,EACPC,SAAU,MA4BCC,MAzBf,WAAiD,IAA5BC,EAA2B,uDAAnBL,EAAWM,EAAQ,uCACxCC,EAAUC,OAAOC,OAAO,GAAIJ,GAChC,OAAQC,EAAOI,MACX,ICZgB,WDaZ,QAAqCC,IAAjCL,EAAOM,aAAaT,SACpBU,EAAU,wBAAyBA,GACnCN,EAAQJ,SAAW,IAAIW,QACpB,CACH,IAAIC,EAAc,IAAID,IAAIR,EAAOM,aAAaT,UAC9CI,EAAQJ,SAAW,IAAIW,IAFpB,2BAGH,YAAsBC,EAAYC,UAAlC,+CAA6C,CAAC,IAAnCC,EAAkC,QACrCC,EAAiBD,EAAQ,GAC7BC,EAAeC,OAAS,IAAIL,IAAII,EAAeC,QAC/CZ,EAAQJ,SAASiB,IAAIH,EAAQ,GAAIC,IANlC,mFASPX,EAAQN,QAAS,EACjBM,EAAQL,MAAQI,EAAOJ,MACvBW,EAAU,qBAAsBA,GAIxC,OAAON,G,oDE3BLc,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDjB,MAAQ,CACXkB,SAAS,GAHM,E,iFAQjBC,KAAKC,SAAS,CACZF,SAAWC,KAAKnB,MAAMkB,Y,+BAKxB,IAAIG,EAAa,EACbC,EAAgB,uBAAGC,UAAU,wBAC7BJ,KAAKnB,MAAMkB,UACbG,EAAa,OACbC,EAAgB,uBAAGC,UAAU,uBAE/B,IAAIC,EAAe,GAPZ,uBAQP,YAAsBL,KAAKF,MAAMnB,SAAjC,+CAA2C,CAAC,IAAjCc,EAAgC,aAClBN,IAAnBM,EAAQa,QAAwBb,EAAQa,OAAOC,OAAS,GAC1DF,EAAaG,KAAK,uBAAGC,IAAKhB,EAAQiB,UAAWN,UAAU,qBAAqB,IAAIO,KAAKlB,EAAQiB,WAAWE,OAAO,OAA7F,MAAuG,uBAAGC,KAAM,gBAAkBpB,EAAQiB,UAAY,OAAQN,UAAU,oBAAjE,kBAVtH,kFAaP,OACE,yBAAKA,UAAU,qBAAqBU,QAASd,KAAKe,kBAAkBC,KAAKhB,OACvE,wBAAIiB,MAAO,CAACC,MAAO,UAAWf,GAC9B,4BAAKH,KAAKF,MAAMqB,MAChB,kBAAC,IAAD,CAAeC,SAAU,IAAKC,OAAQnB,GACnCG,Q,GAhCSiB,IAAMC,WAkDXC,eAXS,SAAC3C,GACvB,MAAO,MAIkB,SAAC4C,GAC1B,MAAO,KAKMD,CAA6C3B,GCjD5D,IAAM6B,EAAQC,EAAQ,IAEhBC,E,wLAEYT,GACdA,EAAOA,EAAKU,QAAQ,OAAQ,OAAOA,QAAQ,OAAQ,OACnD,IACIC,EADQ,IAAIC,OAAO,SAAWZ,EAAO,aACrBa,KAAKC,OAAOC,SAASC,QACzC,OAAmB,OAAZL,EAAmB,GAAKM,mBAAmBN,EAAQ,GAAGD,QAAQ,MAAO,Q,+BAGpE,IAAD,OACP,GAAI7B,KAAKF,MAAMrB,OAAQ,CACrB,IAAI4D,EAAc,GACdrC,KAAKF,MAAMpB,QACb2D,EAAc,wBAAIpB,MAAO,CAAEqB,aAAc,MAAOC,WAAY,MAAOC,SAAU,SAAUC,UAAW,SAAUC,cAAe,YAAaC,MAAO,QAASC,gBAAiB,YAAaC,QAAS,OAAQC,SAAU,WAAYC,IAAK,QAASC,KAAM,MAAOC,WAAY,qBAAsBC,UAAW,oCAAqCC,MAAO,UAAnU,iBAEhB,IAAIC,EAAa,IAAI9D,IALA,uBAMrB,YAAsBU,KAAKF,MAAMnB,SAASa,UAA1C,+CAAqD,CAAC,IAA3CC,EAA0C,QAE/C4D,EADc,IAAI1C,KAAKlB,EAAQ,IACPmB,OAAO,MACD,IAA9BwC,EAAWE,IAAID,IACjBD,EAAWxD,IAAIyD,EAAW,IAE5BD,EAAWG,IAAIF,GAAW7C,KAAKf,EAAQ,KAZpB,kFAcrB,IAAI+D,EAAY,GAdK,uBAerB,YAAoBJ,EAAW5D,UAA/B,+CAA0C,CAAC,IAAhCiE,EAA+B,QACxCD,EAAUhD,KAAK,kBAAC,EAAD,CAAOW,KAAMsC,EAAM,GAAI9E,SAAU8E,EAAM,OAhBnC,kFAkBrB,OACE,yBAAKC,GAAG,OACLrB,EACAmB,GAIL,IAAI9E,EAAQsB,KAAK2D,gBAAgB,OAC7BC,EAAM,sBAQV,MAPc,MAAVlF,IACFkF,EAAM,0BAERlC,EAAM6B,IAAIK,GACPC,MAAK,SAACC,GACL,EAAKhE,MAAMiE,QAAQD,EAAIE,KAAMtF,MAG/B,yBAAKgF,GAAG,Y,GA7CEpC,IAAMC,WAmETC,eAdS,SAAC3C,GACvB,MAAO,CACLJ,OAAQI,EAAMJ,OACdC,MAAOG,EAAMH,MACbC,SAAUE,EAAMF,aAIO,SAAC8C,GAC1B,MAAO,CACLsC,QAAS,SAAC3E,EAAcV,GAAY+C,ECpEjC,SAAuBrC,EAAcV,GACxC,MAAO,CAAEQ,KHHW,WGGiBE,eAAcV,SDmENuF,CAAc7E,EAAcV,QAI9D8C,CAA6CI,GE9DxCsC,QACW,cAA7BjC,OAAOC,SAASiC,UAEe,UAA7BlC,OAAOC,SAASiC,UAEhBlC,OAAOC,SAASiC,SAASC,MACvB,2DCVN,IAAMC,EAAQC,YAAYC,EAAMtC,OAAOuC,8BAAgCvC,OAAOuC,gCAE9EC,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,GAAO,kBAAC,EAAD,OAAoBM,SAASC,eAAe,SAEpFD,SAASC,eAAe,aAAa3D,MAAMlB,QAAU,ODuH/C,kBAAmB8E,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7G,QAAQ6G,MAAMA,EAAMC,c","file":"static/js/main.168ad393.chunk.js","sourcesContent":["export const ERROR = 'font-weight: bold; color: red';\r\nexport const WARNING = 'font-weight: bold; color: orange';\r\nexport const INFO = 'font-weight: bold; color: blue';\r\nexport const SUCCESS = 'font-weight: bold; color: green';\r\nexport const GENERAL = 'font-weight: bold; color: grey';\r\n\r\nexport function cl(msg, css) {\r\n    console.log('%c' + msg, css);\r\n}","import * as ActionTypes from '../constants/actionTypes';\r\nimport * as Logger from '../constants/logCSS';\r\n\r\nconst initState = {\r\n    isInit: false,\r\n    isDev: false,\r\n    hearings: null,\r\n};\r\n\r\nfunction mainReducer(state = initState, action) {\r\n    let current = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case ActionTypes.INIT_APP:\r\n            if (action.hearingsData.hearings === undefined) {\r\n                Logger.cl('NO HEARINGS SCHEDULED', Logger.WARNING);\r\n                current.hearings = new Map();\r\n            } else {\r\n                let tmpHearings = new Map(action.hearingsData.hearings);\r\n                current.hearings = new Map();\r\n                for (const hearing of tmpHearings.entries()) {\r\n                    let preppedHearing = hearing[1];\r\n                    preppedHearing.themes = new Map(preppedHearing.themes);\r\n                    current.hearings.set(hearing[0], preppedHearing);\r\n                }\r\n            }\r\n            current.isInit = true;\r\n            current.isDev = action.isDev;\r\n            Logger.cl('EDITOR INITIALIZED', Logger.SUCCESS);\r\n            break;\r\n        default:\r\n    }\r\n    return current;\r\n}\r\n\r\nexport default mainReducer;","export const INIT_APP = 'INIT_APP';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nclass Month extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      display: false\r\n    };\r\n  }\r\n\r\n  handleMainDisplay() {\r\n    this.setState({\r\n      display: ! this.state.display\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    let mainHeight = 0;\r\n    let iconDirection = <i className=\"fas fa-chevron-down\"></i>\r\n    if (this.state.display) {\r\n      mainHeight = 'auto';\r\n      iconDirection = <i className=\"fas fa-chevron-up\"></i>\r\n    }\r\n    let hearingLinks = [];\r\n    for (const hearing of this.props.hearings) {\r\n      if (hearing.videos !== undefined && hearing.videos.length > 0) {\r\n        hearingLinks.push(<p key={hearing.timeStamp} className=\"ArchiveVideoTitle\">{new Date(hearing.timeStamp).format('F d')} - <a href={'/schedule/?h=' + hearing.timeStamp + '&v=0'} className=\"ArchiveVideoLink\">Watch Video</a></p>);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"WebArchiveMonthDiv\" onClick={this.handleMainDisplay.bind(this)}>\r\n        <h3 style={{float: 'right'}}>{iconDirection}</h3>\r\n        <h3>{this.props.name}</h3>\r\n        <AnimateHeight duration={500} height={mainHeight}>\r\n          {hearingLinks}\r\n        </AnimateHeight>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Month from './components/Month';\nimport { initAppAction } from './actions/actions';\n\nconst axios = require('axios');\n\nclass App extends React.Component {\n\n  getUrlParameter(name) {\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    var results = regex.exec(window.location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n  };\n\n  render() {\n    if (this.props.isInit) {\n      let isDevHeader = '';\n      if (this.props.isDev) {\n        isDevHeader = <h2 style={{ borderRadius: '5px', fontWeight: '800', fontSize: '4.7rem', textAlign: 'center', textTransform: 'uppercase', color: 'white', backgroundColor: '#6200ffc4', padding: '10px', position: 'absolute', top: '150px', left: '50%', textShadow: '0px 0px 20px black', transform: 'rotate(10deg) translate(-35%, 0%)', width: '850px' }}>TEST VERSION</h2>\n      }\n      let months2020 = new Map();\n      for (const hearing of this.props.hearings.entries()) {\n        let hearingDate = new Date(hearing[0]);\n        let monthName = hearingDate.format('F');\n        if (months2020.has(monthName) === false) {\n          months2020.set(monthName, [])\n        }\n        months2020.get(monthName).push(hearing[1]);\n      }\n      let monthList = [];\n      for (const month of months2020.entries()) {\n        monthList.push(<Month name={month[0]} hearings={month[1]}></Month>);\n      }\n      return (\n        <div id=\"App\">\n          {isDevHeader}\n          {monthList}\n        </div>\n      );\n    } else {\n      let isDev = this.getUrlParameter('dev');\n      let url = '/data/hearings.json';\n      if (isDev === 't') {\n        url = '/dataDev/hearings.json';\n      }\n      axios.get(url)\n        .then((res) => {\n          this.props.initApp(res.data, isDev);\n        });\n      return (\n        <div id=\"App\">\n        </div>\n      );\n    }\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isInit: state.isInit,\n    isDev: state.isDev,\n    hearings: state.hearings\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initApp: (hearingsData, isDev) => { dispatch(initAppAction(hearingsData, isDev)) }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as ActionTypes from '../constants/actionTypes';\r\n\r\nexport function initAppAction(hearingsData, isDev) {\r\n    return { type: ActionTypes.INIT_APP, hearingsData, isDev }\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport main from './reducers/mainReducer';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(main, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\ndocument.getElementById('IEMessage').style.display = 'none';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}