{"version":3,"sources":["constants/logCSS.js","reducers/mainReducer.js","constants/actionTypes.js","components/Witness.jsx","components/WitnessList.jsx","App.jsx","actions/actions.js","serviceWorker.js","index.js"],"names":["WARNING","SUCCESS","cl","msg","css","console","log","uuid","require","initState","isInit","isDev","witnesses","hearings","scheduledWitnesses","isWitnessScheduled","hearing","witnessID","themes","entries","theme","loadWitnesses","hearingsData","undefined","Logger","Map","set","sort","a","b","lastName","localeCompare","mainReducer","state","action","current","Object","assign","type","tmpHearings","preppedHearing","witness","get","push","UpdateWitness","props","display","this","setState","displayList","prefix","firstName","title","fullName","fullTitle","chevron","key","className","hearingList","hearingsListCss","schedule","length","hearingDate","Date","timeStamp","href","format","onClick","displayHearingList","bind","duration","height","React","Component","connect","ownProps","witnessId","dispatch","WitnessList","openList","witnessList","cssClass","Witness","handleOpenListClick","axios","App","name","replace","results","RegExp","exec","window","location","search","decodeURIComponent","alphabetList","i","charCodeAt","String","fromCharCode","uppercase","charAt","toUpperCase","alpha","id","getUrlParameter","url","then","res","initApp","data","initAppAction","Boolean","hostname","match","store","createStore","main","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","style","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iOACaA,EAAU,mCAEVC,EAAU,kCAGhB,SAASC,EAAGC,EAAKC,GACpBC,QAAQC,IAAI,KAAOH,EAAKC,GCJ5B,IAAMG,EAAOC,EAAQ,IAEfC,EAAY,CACdC,QAAQ,EACRC,OAAO,EACPC,UAAW,KACXC,SAAU,KACVC,mBAAoB,MAsCxB,SAASC,EAAmBC,EAASC,GAAY,IAAD,uBAC5C,YAAoBD,EAAQE,OAAOC,UAAnC,+CAA8C,CAAC,IAApCC,EAAmC,+BAC1C,YAAsBA,EAAM,GAA5B,+CAAgC,CAC5B,GAD4B,UACZH,EACZ,OAAO,GAH2B,oFADF,kFAQ5C,OAAO,EAGX,SAASI,EAAcC,GACnB,IAAIV,EAkBJ,YAjB+BW,IAA3BD,EAAaV,WACbY,EAAU,kCAAmCA,IAC7CZ,EAAY,IAAIa,KACNC,IAAInB,IAAQ,CAAE,OAAU,MAAO,UAAa,QAAS,SAAY,QAAS,MAAS,iBAC7FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,SAAU,SAAY,UAAW,MAAS,qBAC7FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,OAAQ,SAAY,UAAW,MAAS,KAC3FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,SAAU,SAAY,QAAS,MAAS,wBAC3FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,OAAQ,UAAa,WAAY,SAAY,UAAW,MAAS,iBACnGK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,YAAa,SAAY,SAAU,MAAS,qCAC/FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,UAAW,SAAY,WAAY,MAAS,0BAC/FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,QAAS,SAAY,QAAS,MAAS,mBAC1FK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,OAAQ,UAAa,SAAU,SAAY,SAAU,MAAS,mBAChGK,EAAUc,IAAInB,IAAQ,CAAE,OAAU,GAAI,UAAa,OAAQ,SAAY,SAAU,MAAS,mBAE1FK,EAAY,IAAIa,IAAIH,EAAaV,WAErCA,EAAY,IAAIa,IAAI,YAAIb,EAAUO,WAAWQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAGE,SAASC,cAAcF,EAAE,GAAGC,cAIlFE,MApEf,WAAiD,IAA5BC,EAA2B,uDAAnBxB,EAAWyB,EAAQ,uCACxCC,EAAUC,OAAOC,OAAO,GAAIJ,GAChC,OAAQC,EAAOI,MACX,IChBgB,WDkBZ,GADAH,EAAQvB,UAAYS,EAAca,EAAOZ,mBACJC,IAAjCW,EAAOZ,aAAaT,SACpBW,EAAU,wBAAyBA,GACnCW,EAAQtB,SAAW,IAAIY,QACpB,CACH,IAAIc,EAAc,IAAId,IAAIS,EAAOZ,aAAaT,UAC9CsB,EAAQtB,SAAW,IAAIY,IAFpB,2BAGH,YAAsBc,EAAYpB,UAAlC,+CAA6C,CAAC,IAAnCH,EAAkC,QACrCwB,EAAiBxB,EAAQ,GAC7BwB,EAAetB,OAAS,IAAIO,IAAIe,EAAetB,QAC/CiB,EAAQtB,SAASa,IAAIV,EAAQ,GAAIwB,IANlC,mFASPL,EAAQrB,mBAAqB,IAAIW,IAdrC,2BAeI,YAAsBU,EAAQvB,UAAUO,UAAxC,+CAAmD,CAAC,IAAzCsB,EAAwC,QAC/CN,EAAQrB,mBAAmBY,IAAIe,EAAQ,GAAI,IADI,2BAE/C,YAAsBN,EAAQtB,SAASM,UAAvC,+CAAkD,CAAC,IAAxCH,EAAuC,QAC1CD,EAAmBC,EAAQ,GAAIyB,EAAQ,KACvCN,EAAQrB,mBAAmB4B,IAAID,EAAQ,IAAIE,KAAK3B,EAAQ,KAJjB,oFAfvD,kFAuBImB,EAAQzB,QAAS,EACjByB,EAAQxB,MAAQuB,EAAOvB,MACvBa,EAAU,qBAAsBA,GAIxC,OAAOW,G,4DEzCLS,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDZ,MAAQ,CACTa,SAAS,GAHE,E,kFAQfC,KAAKC,SAAS,CACVF,SAAUC,KAAKd,MAAMa,Y,+BAKzB,IAAIG,EAAc,EACdF,KAAKd,MAAMa,UACXG,EAAc,QAElB,IAAIC,EAASH,KAAKF,MAAMJ,QAAQS,OAC5BC,EAAYJ,KAAKF,MAAMJ,QAAQU,UAC/BrB,EAAWiB,KAAKF,MAAMJ,QAAQX,SAC9BsB,EAAQL,KAAKF,MAAMJ,QAAQW,MAC3BC,EAAW,GACA,KAAXH,IACAG,EAAWH,EAAS,KAExBG,GAAYF,EAAY,IAAMrB,EAC9B,IAAIwB,EAAY,GACF,KAAVF,IACAE,EAAY,KAAOF,GAEvB,IAAIG,EAAU,uBAAGC,IAAKH,EAAWC,EAAWG,UAAU,+CAClDV,KAAKd,MAAMa,UACXS,EAAU,uBAAGC,IAAKH,EAAWC,EAAWG,UAAU,8CAEtD,IAAIC,EAAc,GACdC,EAAkB,mBACtB,GAAIZ,KAAKF,MAAMe,SAASC,OAAS,EAAG,CAAC,IAAD,uBAChC,YAAsBd,KAAKF,MAAMe,SAAjC,+CAA2C,CAAC,IAAjC5C,EAAgC,QACnC8C,EAAc,IAAIC,KAAK/C,EAAQgD,WACnCN,EAAYf,KAAK,uBAAGc,UAAU,mBAAkB,uBAAGQ,KAAM,gBAAkBjD,EAAQgD,WAAYF,EAAYI,OAAO,cAHtF,wFAMhCP,GAAmB,uBAEvB,OACI,yBAAKF,UAAU,yBACVF,EACD,uBAAGE,UAAWE,EAAiBQ,QAASpB,KAAKqB,mBAAmBC,KAAKtB,OAAO,gCAASM,GAAmBC,GACxG,yBAAKG,UAAU,uBACX,kBAAC,IAAD,CAAea,SAAU,IAAKC,OAAQtB,GACjCS,S,GApDGc,IAAMC,WAwEnBC,eAZS,SAACzC,EAAO0C,GAC5B,MAAO,CACHf,SAAU3B,EAAMnB,mBAAmB4B,IAAIiC,EAASC,eAI7B,SAACC,GACxB,MAAO,KAKIH,CAA6C9B,GCd7CkC,E,YAzDX,WAAYjC,GAAQ,IAAD,8BACf,4CAAMA,KACDZ,MAAQ,CACT8C,UAAU,GAHC,E,mFAQXhC,KAAKF,MAAMmC,YAAY,GAAGnB,OAAS,GACnCd,KAAKC,SAAS,CACV+B,UAAWhC,KAAKd,MAAM8C,a,+BAM9B,IAAI9B,EAAc,EACdF,KAAKd,MAAM8C,WACX9B,EAAc,QAElB,IAAIgC,EAAW,GACX1B,EAAU,KAC2B,IAArCR,KAAKF,MAAMmC,YAAY,GAAGnB,QAC1BoB,EAAW,cACPlC,KAAKd,MAAM8C,UACXhC,KAAKC,SAAS,CACV+B,UAAU,MAKdxB,EADAR,KAAKd,MAAM8C,SACD,uBAAGvB,IAAKT,KAAKF,MAAMmC,YAAY,GAAIvB,UAAU,wCAE7C,uBAAGD,IAAKT,KAAKF,MAAMmC,YAAY,GAAIvB,UAAU,0CAE3DwB,EAAW,qBAEf,IAAIrE,EAAY,GAtBX,uBAuBL,YAAsBmC,KAAKF,MAAMmC,YAAY,GAA7C,+CAAiD,CAAC,IAAvCvC,EAAsC,QAC7C7B,EAAU+B,KAAK,kBAACuC,EAAD,CAAS1B,IAAKf,EAAQ,GAAImC,UAAWnC,EAAQ,GAAIA,QAASA,EAAQ,OAxBhF,kFA0BL,OACI,yBAAKgB,UAAU,wBACX,yBAAKA,UAAWwB,EAAUd,QAASpB,KAAKoC,oBAAoBd,KAAKtB,OAC5DQ,EACD,wBAAIE,UAAU,wBAAwBV,KAAKF,MAAMmC,YAAY,KAEjE,kBAAC,IAAD,CAAeV,SAAU,IAAKC,OAAQtB,GAClC,yBAAKQ,UAAU,eACV7C,S,GAlDC4D,IAAMC,WCEhC,IAAMW,EAAQ5E,EAAQ,IAEhB6E,E,wLAEYC,GACdA,EAAOA,EAAKC,QAAQ,OAAQ,OAAOA,QAAQ,OAAQ,OACnD,IACIC,EADQ,IAAIC,OAAO,SAAWH,EAAO,aACrBI,KAAKC,OAAOC,SAASC,QACzC,OAAmB,OAAZL,EAAmB,GAAKM,mBAAmBN,EAAQ,GAAGD,QAAQ,MAAO,Q,+BAGpE,IAAD,OACP,GAAIxC,KAAKF,MAAMnC,OAAQ,CAErB,IADA,IAAIqF,EAAe,IAAItE,IACduE,EAAI,IAAIC,WAAW,GAAID,GAAK,IAAIC,WAAW,GAAID,IACtDD,EAAarE,IAAIwE,OAAOC,aAAaH,GAAI,IAHtB,2BAKrB,YAAsBjD,KAAKF,MAAMjC,UAAUO,UAA3C,+CAAsD,CAAC,IAA5CsB,EAA2C,QAEhD2D,EADY3D,EAAQ,GAAGX,SAASuE,OAAO,GACjBC,cAC1BP,EAAarD,IAAI0D,GAAWzD,KAAKF,IARd,kFAUrB,IAAIuC,EAAc,GAVG,uBAWrB,YAAoBe,EAApB,+CAAkC,CAAC,IAAxBQ,EAAuB,QAChCvB,EAAYrC,KAAK,kBAAC,EAAD,CAAaa,IAAK+C,EAAM,GAAIvB,YAAauB,MAZvC,kFAcrB,OACE,yBAAKC,GAAG,OACN,yBAAK/C,UAAU,mBACZuB,IAKP,IAAIrE,EAAQoC,KAAK0D,gBAAgB,OAC7BC,EAAM,sBAQV,MAPc,MAAV/F,IACF+F,EAAM,0BAERtB,EAAM1C,IAAIgE,GACPC,MAAK,SAACC,GACL,EAAK/D,MAAMgE,QAAQD,EAAIE,KAAMnG,MAG/B,yBAAK6F,GAAG,Y,GA1CEhC,IAAMC,WA+DTC,eAbS,SAACzC,GACvB,MAAO,CACLvB,OAAQuB,EAAMvB,OACdE,UAAWqB,EAAMrB,cAIM,SAACiE,GAC1B,MAAO,CACLgC,QAAS,SAACvF,GAAmBuD,ECjE1B,SAAuBvD,EAAcX,GACxC,MAAO,CAAE2B,KJHW,WIGiBhB,eAAcX,SDgEboG,CAAczF,QAIzCoD,CAA6CW,GE3DxC2B,QACW,cAA7BrB,OAAOC,SAASqB,UAEe,UAA7BtB,OAAOC,SAASqB,UAEhBtB,OAAOC,SAASqB,SAASC,MACvB,2DCTN,IAAMC,EAAQC,YAAYC,EAAM1B,OAAO2B,8BAAgC3B,OAAO2B,gCAE9EC,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,GAAO,kBAAC,EAAD,OAAoBM,SAASC,eAAe,SAEpFD,SAASC,eAAe,aAAaC,MAAM7E,QAAU,ODsH/C,kBAAmB8E,WACrBA,UAAUC,cAAcC,MAAMnB,MAAK,SAAAoB,GACjCA,EAAaC,kB","file":"static/js/main.7b836529.chunk.js","sourcesContent":["export const ERROR = 'font-weight: bold; color: red';\r\nexport const WARNING = 'font-weight: bold; color: orange';\r\nexport const INFO = 'font-weight: bold; color: blue';\r\nexport const SUCCESS = 'font-weight: bold; color: green';\r\nexport const GENERAL = 'font-weight: bold; color: grey';\r\n\r\nexport function cl(msg, css) {\r\n    console.log('%c' + msg, css);\r\n}","import * as ActionTypes from '../constants/actionTypes';\r\nimport * as Logger from '../constants/logCSS';\r\n\r\nconst uuid = require('uuid/v4');\r\n\r\nconst initState = {\r\n    isInit: false,\r\n    isDev: false,\r\n    witnesses: null,\r\n    hearings: null,\r\n    scheduledWitnesses: null\r\n};\r\n\r\nfunction mainReducer(state = initState, action) {\r\n    let current = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case ActionTypes.INIT_APP:\r\n            current.witnesses = loadWitnesses(action.hearingsData);\r\n            if (action.hearingsData.hearings === undefined) {\r\n                Logger.cl('NO HEARINGS SCHEDULED', Logger.WARNING);\r\n                current.hearings = new Map();\r\n            } else {\r\n                let tmpHearings = new Map(action.hearingsData.hearings);\r\n                current.hearings = new Map();\r\n                for (const hearing of tmpHearings.entries()) {\r\n                    let preppedHearing = hearing[1];\r\n                    preppedHearing.themes = new Map(preppedHearing.themes);\r\n                    current.hearings.set(hearing[0], preppedHearing);\r\n                }\r\n            }\r\n            current.scheduledWitnesses = new Map();\r\n            for (const witness of current.witnesses.entries()) {\r\n                current.scheduledWitnesses.set(witness[0], []);\r\n                for (const hearing of current.hearings.entries()) {\r\n                    if (isWitnessScheduled(hearing[1], witness[0])) {\r\n                        current.scheduledWitnesses.get(witness[0]).push(hearing[1]);\r\n                    }\r\n                }\r\n            }\r\n            current.isInit = true;\r\n            current.isDev = action.isDev;\r\n            Logger.cl('EDITOR INITIALIZED', Logger.SUCCESS);\r\n            break;\r\n        default:\r\n    }\r\n    return current;\r\n}\r\n\r\nfunction isWitnessScheduled(hearing, witnessID) {\r\n    for (const theme of hearing.themes.entries()) {\r\n        for (const witness of theme[1]) {\r\n            if (witness === witnessID) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction loadWitnesses(hearingsData) {\r\n    let witnesses;\r\n    if (hearingsData.witnesses === undefined) {\r\n        Logger.cl('NO WITNESSES: ENTERING DEFAULTS', Logger.WARNING);\r\n        witnesses = new Map();\r\n        witnesses.set(uuid(), { \"prefix\": \"Dr.\", \"firstName\": \"Brett\", \"lastName\": \"White\", \"title\": \"Grand Poobha\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Sallie\", \"lastName\": \"Dresser\", \"title\": \"Big Grand Poobha\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Alex\", \"lastName\": \"Tidwell\", \"title\": \"\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Joseph\", \"lastName\": \"White\", \"title\": \"Little Grand Poobha\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"Hon.\", \"firstName\": \"Kimberly\", \"lastName\": \"Paulsen\", \"title\": \"MBA in Stuff\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Catherine\", \"lastName\": \"Warren\", \"title\": \"Chief Investigator of all Things\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Barbara\", \"lastName\": \"Richards\", \"title\": \"Finder of Lost Change\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Karen\", \"lastName\": \"Crowe\", \"title\": \"Grandma Poobha\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"Lord\", \"firstName\": \"Robert\", \"lastName\": \"Frumpy\", \"title\": \"Grandpa Poobha\" });\r\n        witnesses.set(uuid(), { \"prefix\": \"\", \"firstName\": \"Eric\", \"lastName\": \"Kelsey\", \"title\": \"Just Some Guy\" });\r\n    } else {\r\n        witnesses = new Map(hearingsData.witnesses);\r\n    }\r\n    witnesses = new Map([...witnesses.entries()].sort((a, b) => a[1].lastName.localeCompare(b[1].lastName)));\r\n    return witnesses;\r\n}\r\n\r\nexport default mainReducer;","export const INIT_APP = 'INIT_APP';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nclass UpdateWitness extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            display: false\r\n        }\r\n    }\r\n\r\n    displayHearingList() {\r\n        this.setState({\r\n            display: !this.state.display\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let displayList = 0;\r\n        if (this.state.display) {\r\n            displayList = 'auto';\r\n        }\r\n        let prefix = this.props.witness.prefix;\r\n        let firstName = this.props.witness.firstName;\r\n        let lastName = this.props.witness.lastName;\r\n        let title = this.props.witness.title;\r\n        let fullName = '';\r\n        if (prefix !== '') {\r\n            fullName = prefix + ' ';\r\n        }\r\n        fullName += firstName + ' ' + lastName;\r\n        let fullTitle = '';\r\n        if (title !== '') {\r\n            fullTitle = ', ' + title;\r\n        }\r\n        let chevron = <i key={fullName + fullTitle} className=\"fas fa-chevron-down HearingsListOpenButton\"></i>;\r\n        if (this.state.display) {\r\n            chevron = <i key={fullName + fullTitle} className=\"fas fa-chevron-up HearingsListOpenButton\"></i>;\r\n        }\r\n        let hearingList = [];\r\n        let hearingsListCss = 'NamesOfWitnesses';\r\n        if (this.props.schedule.length > 0) {\r\n            for (const hearing of this.props.schedule) {\r\n                let hearingDate = new Date(hearing.timeStamp);\r\n                hearingList.push(<p className=\"HearingDateLink\"><a href={\"/schedule/?h=\" + hearing.timeStamp}>{hearingDate.format('j F, Y')}</a></p>);\r\n            }\r\n        } else {\r\n            hearingsListCss += ' WitnessNotScheduled';\r\n        }\r\n        return (\r\n            <div className=\"UpdateWitnessTitlebar\">\r\n                {chevron}\r\n                <p className={hearingsListCss} onClick={this.displayHearingList.bind(this)}><strong>{fullName}</strong>{fullTitle}</p>\r\n                <div className=\"WitnessHearingsList\">\r\n                    <AnimateHeight duration={500} height={displayList}>\r\n                        {hearingList}\r\n                    </AnimateHeight>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        schedule: state.scheduledWitnesses.get(ownProps.witnessId)\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateWitness);\r\n","import React from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport Witness from './Witness';\r\n\r\nclass WitnessList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openList: false\r\n        };\r\n    }\r\n\r\n    handleOpenListClick() {\r\n        if (this.props.witnessList[1].length > 0) {\r\n            this.setState({\r\n                openList: !this.state.openList\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let displayList = 0;\r\n        if (this.state.openList) {\r\n            displayList = 'auto';\r\n        }\r\n        let cssClass = '';\r\n        let chevron = null;\r\n        if (this.props.witnessList[1].length === 0) {\r\n            cssClass = 'NoWitnesses';\r\n            if (this.state.openList) {\r\n                this.setState({\r\n                    openList: false\r\n                });\r\n            }\r\n        } else {\r\n            if (this.state.openList) {\r\n                chevron = <i key={this.props.witnessList[0]} className=\"fas fa-chevron-up WitnessOpenButton\"></i>;\r\n            } else {\r\n                chevron = <i key={this.props.witnessList[0]} className=\"fas fa-chevron-down WitnessOpenButton\"></i>;\r\n            }\r\n            cssClass = 'WitnessListActive';\r\n        }\r\n        let witnesses = [];\r\n        for (const witness of this.props.witnessList[1]) {\r\n            witnesses.push(<Witness key={witness[0]} witnessId={witness[0]} witness={witness[1]}></Witness>);\r\n        }\r\n        return (\r\n            <div className=\"WitnessListContainer\">\r\n                <div className={cssClass} onClick={this.handleOpenListClick.bind(this)}>\r\n                    {chevron}\r\n                    <h2 className=\"WitnessAlphabetTitle\">{this.props.witnessList[0]}</h2>\r\n                </div>\r\n                <AnimateHeight duration={500} height={displayList}>\r\n                    <div className=\"WitnessList\">\r\n                        {witnesses}\r\n                    </div>\r\n                </AnimateHeight>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WitnessList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Logger from './constants/logCSS';\r\nimport WitnessList from './components/WitnessList';\r\nimport { initAppAction } from './actions/actions';\r\n\r\nconst axios = require('axios');\r\n\r\nclass App extends React.Component {\r\n\r\n  getUrlParameter(name) {\r\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n    var results = regex.exec(window.location.search);\r\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isInit) {\r\n      let alphabetList = new Map();\r\n      for (let i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++) {\r\n        alphabetList.set(String.fromCharCode(i), []);\r\n      }\r\n      for (const witness of this.props.witnesses.entries()) {\r\n        let firstChar = witness[1].lastName.charAt(0);\r\n        let uppercase = firstChar.toUpperCase();\r\n        alphabetList.get(uppercase).push(witness);\r\n      }\r\n      let witnessList = [];\r\n      for (const alpha of alphabetList) {\r\n        witnessList.push(<WitnessList key={alpha[0]} witnessList={alpha}></WitnessList>);\r\n      }\r\n      return (\r\n        <div id=\"App\">\r\n          <div className=\"WitnessPageList\">\r\n            {witnessList}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      let isDev = this.getUrlParameter('dev');\r\n      let url = '/data/hearings.json';\r\n      if (isDev === 't') {\r\n        url = '/dataDev/hearings.json';\r\n      }\r\n      axios.get(url)\r\n        .then((res) => {\r\n          this.props.initApp(res.data, isDev);\r\n        });\r\n      return (\r\n        <div id=\"App\">\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isInit: state.isInit,\r\n    witnesses: state.witnesses\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    initApp: (hearingsData) => { dispatch(initAppAction(hearingsData)) }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as ActionTypes from '../constants/actionTypes';\r\n\r\nexport function initAppAction(hearingsData, isDev) {\r\n    return { type: ActionTypes.INIT_APP, hearingsData, isDev }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport main from './reducers/mainReducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(main, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\ndocument.getElementById('IEMessage').style.display = 'none';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}