{"version":3,"sources":["constants/logCSS.js","reducers/mainReducer.js","constants/actionTypes.js","actions/actions.js","components/Day.jsx","constants/calendarTypes.js","components/Month.jsx","components/ThemesWitnesses.jsx","components/SelectedHearing.jsx","App.jsx","serviceWorker.js","index.js"],"names":["WARNING","SUCCESS","cl","msg","css","console","log","initState","isInit","isDev","themes","witnesses","hearings","displayHearing","selectedHearing","displayVideo","videoToWatch","scrollToVideo","loadThemes","hearingsData","undefined","Logger","Map","entries","sort","a","b","localeCompare","loadWitnesses","lastName","mainReducer","state","action","current","Object","assign","type","tmpHearings","hearing","preppedHearing","set","has","hearingId","get","showVideo","selectHearingAction","playVideoAction","showHideVideoAction","Day","this","props","selectHearing","timeStamp","showHearing","hideHearing","setTimeout","deSelectHearing","clearDay","className","cssClasses","today","Date","calendarType","selected","isCancelled","date","getFullYear","getMonth","getDate","onClick","handleDayClick","bind","React","Component","connect","ownProps","hasHearing","getTime","dispatch","hearingTS","Month","daysOfMonth","startWeekDay","getDay","clear","push","key","maxDaysInMonth","format","i","currentDate","monthClasses","ThemesWitnesses","witnessList","themeId","witnessId","prefix","firstName","title","fullName","fullTitle","ReactMarkdown","require","SelectedHearing","playingMorningVideo","playingAfternoonVideo","videoRef","createRef","morningVideo","showHideVideo","playVideo","afternoonVideo","hearingTitleDate","notifications","source","style","color","fontWeight","buildingRoom","street","city","morningSession","afternoonSession","themesList","exhibitsList","size","keys","theme","exhibits","length","exhibit","url","href","transcriptLink","marginTop","target","webcastLink","textAlign","timeCss","timeNoneDefaultMsg","defaultTime","locationCss","locationNoneDefaultMsg","defaultAddress","videos","morningUploaded","afternoonUploaded","ref","handleWatchMorningVideoClick","handleWatchAfternoonVideoClick","videoHeight","videoPlayer","queryStr","shouldScrollToVideo","padding","position","src","frameBorder","allow","allowFullScreen","top","left","width","height","window","scrollTo","offsetTop","float","duration","axios","App","name","replace","results","RegExp","exec","location","search","decodeURIComponent","mainHeight","calendar","endTS","startDate","setDate","endDate","numMonths","visibleSlides","isMobile","endOfCarousel","newDate","setMonth","index","selectedHearingKey","isDevHeader","borderRadius","fontSize","textTransform","backgroundColor","textShadow","transform","id","naturalSlideWidth","naturalSlideHeight","totalSlides","currentSlide","getUrlParameter","then","res","initApp","data","preSelect","parseInt","isNaN","videoIdQuery","videoSession","initAppAction","Boolean","hostname","match","store","createStore","main","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","display","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4eb325c3.chunk.js","sourcesContent":["export const ERROR = 'font-weight: bold; color: red';\r\nexport const WARNING = 'font-weight: bold; color: orange';\r\nexport const INFO = 'font-weight: bold; color: blue';\r\nexport const SUCCESS = 'font-weight: bold; color: green';\r\nexport const GENERAL = 'font-weight: bold; color: grey';\r\n\r\nexport function cl(msg, css) {\r\n    console.log('%c' + msg, css);\r\n}","import * as ActionTypes from '../constants/actionTypes';\r\nimport * as Logger from '../constants/logCSS';\r\n\r\nconst initState = {\r\n    isInit: false,\r\n    isDev: false,\r\n    themes: null,\r\n    witnesses: null,\r\n    hearings: null,\r\n    displayHearing: false,\r\n    selectedHearing: null,\r\n    displayVideo: false,\r\n    videoToWatch: '',\r\n    scrollToVideo: false\r\n};\r\n\r\nfunction mainReducer(state = initState, action) {\r\n    let current = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case ActionTypes.INIT_APP:\r\n            current.themes = loadThemes(action.hearingsData);\r\n            current.witnesses = loadWitnesses(action.hearingsData);\r\n            if (action.hearingsData.hearings === undefined) {\r\n                Logger.cl('NO HEARINGS SCHEDULED', Logger.WARNING);\r\n                current.hearings = new Map();\r\n            } else {\r\n                let tmpHearings = new Map(action.hearingsData.hearings);\r\n                current.hearings = new Map();\r\n                for (const hearing of tmpHearings.entries()) {\r\n                    let preppedHearing = hearing[1];\r\n                    preppedHearing.themes = new Map(preppedHearing.themes);\r\n                    current.hearings.set(hearing[0], preppedHearing);\r\n                }\r\n            }\r\n            current.isInit = true;\r\n            current.isDev = action.isDev;\r\n            Logger.cl('EDITOR INITIALIZED', Logger.SUCCESS);\r\n            break;\r\n        case ActionTypes.SELECT_HEARING:\r\n            if (current.hearings.has(action.hearingId)) {\r\n                current.selectedHearing = current.hearings.get(action.hearingId);\r\n                Logger.cl('SELECT HEARING', Logger.SUCCESS);\r\n            } else {\r\n                Logger.cl('HEARING NOT FOUND', Logger.WARNING);\r\n            }\r\n            break;\r\n        case ActionTypes.DESELECT_HEARING:\r\n            current.selectedHearing = null;\r\n            current.scrollToVideo = false;\r\n            current.displayVideo = false;\r\n            current.videoToWatch = '';\r\n            Logger.cl('DESELECTED HEARING', Logger.SUCCESS);\r\n            break;\r\n        case ActionTypes.SHOW_HEARING:\r\n            current.displayHearing = true;\r\n            Logger.cl('DISPLAY HEARING', Logger.SUCCESS);\r\n            break;\r\n        case ActionTypes.HIDE_HEARING:\r\n            current.displayHearing = false;\r\n            current.scrollToVideo = false;\r\n            current.displayVideo = false;\r\n            current.videoToWatch = '';\r\n            Logger.cl('HIDE HEARING', Logger.SUCCESS);\r\n            break;\r\n        case ActionTypes.PLAY_VIDEO:\r\n            current.videoToWatch = action.videoToWatch;\r\n            Logger.cl('PLAY VIDEO', Logger.SUCCESS);\r\n            break;\r\n        case ActionTypes.SHOW_HIDE_VIDEO:\r\n            current.displayVideo = action.showVideo;\r\n            if (current.displayVideo) {\r\n                Logger.cl('SHOW VIDEO', Logger.SUCCESS);\r\n            } else {\r\n                Logger.cl('HIDE VIDEO', Logger.SUCCESS);\r\n            }\r\n            break;\r\n        case ActionTypes.SCROLL_TO_VIDEO:\r\n            current.scrollToVideo = true;\r\n            Logger.cl('SCROLLING VIDEO', Logger.SUCCESS);\r\n            break;\r\n        default:\r\n    }\r\n    return current;\r\n}\r\n\r\nfunction loadThemes(hearingsData) {\r\n    let themes;\r\n    if (hearingsData.themes === undefined) {\r\n        Logger.cl('NO THEMES', Logger.WARNING);\r\n        themes = new Map();\r\n    } else {\r\n        themes = new Map(hearingsData.themes);\r\n    }\r\n    themes = new Map([...themes.entries()].sort((a, b) => a[1].localeCompare(b[1])));\r\n    return themes;\r\n}\r\n\r\nfunction loadWitnesses(hearingsData) {\r\n    let witnesses;\r\n    if (hearingsData.witnesses === undefined) {\r\n        Logger.cl('NO WITNESSES', Logger.WARNING);\r\n        witnesses = new Map();\r\n    } else {\r\n        witnesses = new Map(hearingsData.witnesses);\r\n    }\r\n    witnesses = new Map([...witnesses.entries()].sort((a, b) => a[1].lastName.localeCompare(b[1].lastName)));\r\n    return witnesses;\r\n}\r\n\r\nexport default mainReducer;","export const INIT_APP = 'INIT_APP';\r\nexport const SELECT_HEARING = 'SELECT_HEARING';\r\nexport const DESELECT_HEARING = 'DESELECT_HEARING';\r\nexport const SHOW_HEARING = 'SHOW_HEARING';\r\nexport const HIDE_HEARING = 'HIDE_HEARING';\r\nexport const PLAY_VIDEO = 'PLAY_STOP_VIDEO';\r\nexport const SHOW_HIDE_VIDEO = 'SHOW_HIDE_VIDEO';\r\nexport const SCROLL_TO_VIDEO = 'SCROLL_TO_VIDEO';\r\n","import * as ActionTypes from '../constants/actionTypes';\r\n\r\nexport function initAppAction(hearingsData, isDev) {\r\n    return { type: ActionTypes.INIT_APP, hearingsData, isDev }\r\n}\r\n\r\nexport function selectHearingAction(hearingId) {\r\n    return { type: ActionTypes.SELECT_HEARING, hearingId }\r\n}\r\n\r\nexport function deSelectHearingAction() {\r\n    return { type: ActionTypes.DESELECT_HEARING }\r\n}\r\n\r\nexport function showHearingAction() {\r\n    return { type: ActionTypes.SHOW_HEARING }\r\n}\r\n\r\nexport function hideHearingAction() {\r\n    return { type: ActionTypes.HIDE_HEARING }\r\n}\r\n\r\nexport function playVideoAction(videoToWatch) {\r\n    return { type: ActionTypes.PLAY_VIDEO, videoToWatch }\r\n}\r\n\r\nexport function showHideVideoAction(showVideo) {\r\n    return { type: ActionTypes.SHOW_HIDE_VIDEO, showVideo }\r\n}\r\n\r\nexport function scrollToVideoAction() {\r\n    return { type: ActionTypes.SCROLL_TO_VIDEO }\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as CalendarType from '../constants/calendarTypes';\r\nimport { selectHearingAction } from '../actions/actions';\r\nimport { deSelectHearingAction } from '../actions/actions';\r\nimport { showHearingAction } from '../actions/actions';\r\nimport { hideHearingAction } from '../actions/actions';\r\n\r\nclass Day extends React.Component {\r\n    handleDayClick() {\r\n        if (this.props.selectedHearing === null) {\r\n            this.props.selectHearing(this.props.hearing.timeStamp);\r\n            this.props.showHearing();\r\n        } else {\r\n            if (this.props.selectedHearing.timeStamp === this.props.hearing.timeStamp) {\r\n                this.props.hideHearing();\r\n                setTimeout(() => { this.props.deSelectHearing(); }, 600);\r\n\r\n            } else {\r\n                this.props.hideHearing();\r\n                setTimeout(\r\n                    () => {\r\n                        this.props.selectHearing(this.props.hearing.timeStamp);\r\n                        this.props.showHearing();\r\n                    }, 750);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.clearDay) {\r\n            return (\r\n                <div className=\"ClearDay\"></div>\r\n            );\r\n        } else {\r\n            let cssClasses = '';\r\n            let today = new Date();\r\n            if (this.props.calendarType === CalendarType.EXHIBITS || this.props.calendarType === CalendarType.CALENDAR) {\r\n                cssClasses = 'DayNoSelection';\r\n            } else {\r\n                cssClasses = 'Day';\r\n            }\r\n            if (this.props.calendarType !== CalendarType.EXHIBITS && this.props.selected) {\r\n                cssClasses += ' SelectedDay';\r\n            } else if (this.props.hearing !== null) {\r\n                if (this.props.hearing.isCancelled) {\r\n                    cssClasses += ' CancelledHearing';\r\n                } else {\r\n                    cssClasses += ' EvidentiaryHearing';\r\n                }\r\n            } else if (this.props.date.getFullYear() === today.getFullYear() && this.props.date.getMonth() === today.getMonth() && this.props.date.getDate() === today.getDate() && this.props.calendarType === CalendarType.EDITOR) {\r\n                cssClasses += ' CurrentDay';\r\n            }\r\n            return (\r\n                <div className={ cssClasses } onClick={ this.handleDayClick.bind(this) }>{ this.props.date.getDate() }</div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let hasHearing = null;\r\n    if (ownProps.date !== undefined && state.hearings.has(ownProps.date.getTime())) {\r\n        hasHearing = state.hearings.get(ownProps.date.getTime());\r\n    }\r\n    return {\r\n        hearing: hasHearing,\r\n        displayHearing: state.displayHearing,\r\n        selectedHearing: state.selectedHearing\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectHearing: (hearingTS) => { dispatch(selectHearingAction(hearingTS)) },\r\n        deSelectHearing: () => { dispatch(deSelectHearingAction()) },\r\n        showHearing: () => { dispatch(showHearingAction()) },\r\n        hideHearing: () => { dispatch(hideHearingAction()) }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\r\n","export const CALENDAR = 'CALENDAR';\r\nexport const EDITOR = 'EDITOR';\r\nexport const EXHIBITS = 'EXHIBITS';\r\nexport const MINI = 'MINI';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Day from './Day';\r\n\r\nclass Month extends React.Component {\r\n  render() {\r\n    let daysOfMonth = [];\r\n    let startWeekDay = this.props.date.getDay();\r\n    if (startWeekDay !== 0) {\r\n      for (let clear = 0; clear < startWeekDay; clear++) {\r\n        daysOfMonth.push(<Day key={ clear } clearDay={ true }></Day>)\r\n      }\r\n    }\r\n    let maxDaysInMonth = this.props.date.format('t');\r\n    for (let i = 1; i <= maxDaysInMonth; i++) {\r\n      let currentDate = new Date(this.props.date.getFullYear(), this.props.date.getMonth(), i);\r\n      daysOfMonth.push(<Day key={ currentDate.getTime() } date={ currentDate } calendarType={this.props.calendarType}></Day>);\r\n    }\r\n    let monthClasses = 'Month';\r\n    let today = new Date();\r\n    if (this.props.date.getFullYear() === today.getFullYear() && this.props.date.getMonth() === today.getMonth()) {\r\n      monthClasses += ' CurrentMonth';\r\n    }\r\n    return (\r\n      <div className={ monthClasses }>\r\n        <div>\r\n          <h2 className=\"MonthName\">{ this.props.date.format('F') } <span className=\"YearTitle\">{ this.props.date.getFullYear() }</span></h2>\r\n        </div>\r\n        <div className=\"DaysOfMonth\">\r\n          <p className=\"WeekNames\">Sun</p>\r\n          <p className=\"WeekNames\">Mon</p>\r\n          <p className=\"WeekNames\">Tue</p>\r\n          <p className=\"WeekNames\">Wed</p>\r\n          <p className=\"WeekNames\">Thu</p>\r\n          <p className=\"WeekNames\">Fri</p>\r\n          <p className=\"WeekNames\">Sat</p>\r\n          { daysOfMonth }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ThemesWitnesses extends React.Component {\r\n    render() {\r\n        let witnessList = [];\r\n        for (const witnessId of this.props.hearing.themes.get(this.props.themeId)) {\r\n            let prefix = this.props.witnesses.get(witnessId).prefix;\r\n            let firstName = this.props.witnesses.get(witnessId).firstName;\r\n            let lastName = this.props.witnesses.get(witnessId).lastName;\r\n            let title = this.props.witnesses.get(witnessId).title;\r\n            let fullName = '';\r\n            if (prefix !== '') {\r\n                fullName = prefix + ' ';\r\n            }\r\n            fullName += firstName + ' ' + lastName;\r\n            let fullTitle = '';\r\n            if (title !== '') {\r\n                fullTitle = ', ' + title;\r\n            }\r\n            witnessList.push(<p key={fullName + fullTitle} className=\"WitnessListNames\"><strong>{fullName}</strong>{fullTitle}</p>)\r\n        }\r\n        return (\r\n            <div className=\"HearingTheme\">\r\n                <p className=\"HearingThemeName\">{this.props.themes.get(this.props.themeId)}</p>\r\n                {witnessList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hearing: state.selectedHearing,\r\n        themes: state.themes,\r\n        witnesses: state.witnesses\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemesWitnesses);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport ThemesWitnesses from './ThemesWitnesses';\r\nimport { playVideoAction } from '../actions/actions';\r\nimport { showHideVideoAction } from '../actions/actions';\r\nimport { scrollToVideoAction } from '../actions/actions';\r\n\r\nconst ReactMarkdown = require('react-markdown');\r\n\r\nclass SelectedHearing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playingMorningVideo: false,\r\n            playingAfternoonVideo: false\r\n        };\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    handleWatchMorningVideoClick() {\r\n        if (this.props.videoToWatch === this.props.hearing.morningVideo) {\r\n            this.props.showHideVideo(false);\r\n            setTimeout(() => {\r\n                this.props.playVideo('');\r\n            }, 500);\r\n        } else {\r\n            this.props.playVideo(this.props.hearing.morningVideo);\r\n            this.props.showHideVideo(true);\r\n            this.props.scrollToVideo();\r\n        }\r\n    }\r\n\r\n    handleWatchAfternoonVideoClick() {\r\n        if (this.props.videoToWatch === this.props.hearing.afternoonVideo) {\r\n            this.props.showHideVideo(false);\r\n            setTimeout(() => {\r\n                this.props.playVideo('');\r\n            }, 500);\r\n        } else {\r\n            this.props.playVideo(this.props.hearing.afternoonVideo);\r\n            this.props.showHideVideo(true);\r\n            this.props.scrollToVideo();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let hearingTitleDate = '';\r\n        let notifications = [];\r\n        if (this.props.hearing !== null) {\r\n            if (this.props.hearing.notifications !== '') {\r\n                notifications.push(\r\n                    (\r\n                        <div key=\"Notifications\">\r\n                            <h2 className=\"HearingFormSectionTitle\">Notifications</h2>\r\n                            <div className=\"MarkdownPreview\">\r\n                                <ReactMarkdown source={this.props.hearing.notifications} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                );\r\n            }\r\n            if (this.props.hearing.isCancelled) {\r\n                hearingTitleDate = new Date(this.props.hearing.timeStamp).format('F j, Y');\r\n                return (\r\n                    <div className=\"SelectedHearing\">\r\n                        <h2 className=\"HearingFormSectionTitle\">{hearingTitleDate} <span style={{ color: 'red', fontWeight: '400' }}>Hearing Cancelled</span></h2>\r\n                        {notifications}\r\n                    </div>\r\n                );\r\n            } else {\r\n                let topNotification = [];  // Any tags you place in here will appear at the top of the selected hearing area as a notification.\r\n                let themesList = [];\r\n                let exhibitsList = [];\r\n                let buildingRoom = '';\r\n                let street = '';\r\n                let city = '';\r\n                let morningSession = '';\r\n                let afternoonSession = '';\r\n                hearingTitleDate = new Date(this.props.hearing.timeStamp).format('F j, Y');\r\n                buildingRoom = this.props.hearing.buildingRoom;\r\n                street = this.props.hearing.street;\r\n                city = this.props.hearing.city;\r\n                morningSession = this.props.hearing.morningSession;\r\n                afternoonSession = this.props.hearing.afternoonSession;\r\n                if (this.props.hearing.themes.size === 0) {\r\n                    themesList.push(<p key=\"NoThemesScheduled\">There are no themes scheduled for this hearing.</p>);\r\n                } else {\r\n                    for (const theme of this.props.hearing.themes.keys()) {\r\n                        themesList.push(<ThemesWitnesses key={theme} themeId={theme}></ThemesWitnesses>);\r\n                    }\r\n                }\r\n                if (this.props.hearing.exhibits.length === 0) {\r\n                    exhibitsList.push(<p key=\"NoExhibitsEntered\">There are no exhibits for this hearing.</p>);\r\n                } else {\r\n                    for (const exhibit of this.props.hearing.exhibits) {\r\n                        let url = '/data/exhibits/';\r\n                        if (this.props.isDev) {\r\n                            url = '/dataDev/exhibits/';\r\n                        }\r\n                        exhibitsList.push(<p key={exhibit[0] + 'NUM'}>#{exhibit[0]}</p>);\r\n                        exhibitsList.push(<p key={exhibit[0] + 'LINK'}><a href={url + exhibit[2]}>{exhibit[1]}</a></p>);\r\n                    }\r\n                }\r\n                let transcriptLink = <p key=\"NoTranscripts\" style={{marginTop: '0px'}}><strong>Transcripts for this session will be uploaded here.</strong></p>;\r\n                if (this.props.hearing.transcriptLink !== '') {\r\n                    if (this.props.isDev) {\r\n                        transcriptLink = <p key={this.props.hearing.transcriptLink} style={{marginTop: '0px'}}><a href={\"/dataDev/transcripts/\" + this.props.hearing.transcriptLink} target=\"_blank\">{this.props.hearing.transcriptLink}</a></p>;\r\n                    } else {\r\n                        transcriptLink = <p key={this.props.hearing.transcriptLink} style={{marginTop: '0px'}}><a href={\"/data/transcripts/\" + this.props.hearing.transcriptLink} target=\"_blank\">{this.props.hearing.transcriptLink}</a></p>;\r\n                    }\r\n                }\r\n                let webcastLink = [];\r\n                if (this.props.hearing.timeStamp === new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()).getTime()) {\r\n                    webcastLink = <h3 key=\"WebcastLink\" className=\"HearingFormSectionTitle\" style={{ textAlign: 'center' }}><a href=\"/webcast-live/\" target=\"_blank\">View Live Webcast of this Hearing</a></h3>;\r\n                }\r\n                let timeCss = \"LocationTimeInfo\";\r\n                let timeNoneDefaultMsg = '';\r\n                if (this.props.hearing.defaultTime === false) {\r\n                    timeCss += ' NoneDefault';\r\n                    timeNoneDefaultMsg = <span key=\"NoneDefaultTimeMsg\"><br /><br />Notice change in time.</span>\r\n                }\r\n                let locationCss = \"LocationTimeInfo\";\r\n                let locationNoneDefaultMsg = '';\r\n                if (this.props.hearing.defaultAddress === false) {\r\n                    locationCss += ' NoneDefault';\r\n                    locationNoneDefaultMsg = <span key=\"NoneDefaultLocationMsg\"><br /><br />Notice change in location.</span>\r\n                }\r\n                let videos = [];\r\n                let morningUploaded = false;\r\n                let afternoonUploaded = false;\r\n                if (this.props.hearing.morningVideo !== undefined && this.props.hearing.morningVideo !== '') {\r\n                    morningUploaded = true;\r\n                }\r\n                if (this.props.hearing.afternoonVideo !== undefined && this.props.hearing.afternoonVideo !== '') {\r\n                    afternoonUploaded = true;\r\n                }\r\n                if (morningUploaded === false && afternoonUploaded === false) {\r\n                    videos = <p><strong>No videos uploaded at this point.</strong></p>;\r\n                } else if (morningUploaded && afternoonUploaded) {\r\n                    videos.push(<div key={this.props.hearing.morningVideo} ref={this.videoRef} className=\"Button RegularButton ButtonMarginLeft ButtonMarginRight\" onClick={this.handleWatchMorningVideoClick.bind(this)}>Watch Morning Session</div>);\r\n                    videos.push(<div key={this.props.hearing.afternoonVideo} ref={this.videoRef} className=\"Button RegularButton ButtonMarginLeft ButtonMarginRight\" onClick={this.handleWatchAfternoonVideoClick.bind(this)}>Watch Afternoon Session</div>);\r\n                } else {\r\n                    if (morningUploaded) {\r\n                        videos = <div key={this.props.hearing.morningVideo} ref={this.videoRef} className=\"Button RegularButton ButtonMarginLeft ButtonMarginRight\" onClick={this.handleWatchMorningVideoClick.bind(this)}>Watch Morning Session</div>;\r\n                    }\r\n                    if (afternoonUploaded) {\r\n                        videos = <div key={this.props.hearing.afternoonVideo} ref={this.videoRef} className=\"Button RegularButton ButtonMarginLeft ButtonMarginRight\" onClick={this.handleWatchAfternoonVideoClick.bind(this)}>Watch Afternoon Session</div>;\r\n                    }\r\n                }\r\n                let videoHeight = 0;\r\n                let videoPlayer = <p key=\"Default\"></p>;\r\n                if (this.props.displayVideo) {\r\n                    videoHeight = 'auto';\r\n                }\r\n                if (this.props.videoToWatch !== '') {\r\n                    let queryStr = '';\r\n                    if (this.props.shouldScrollToVideo) {\r\n                        queryStr = '?autoplay=1';\r\n                    }\r\n                    videoPlayer = <div key=\"vimeoplayer\" style={{ padding: '56.25% 0 0 0', position: 'relative' }}><iframe src={'https://player.vimeo.com/video/' + this.props.videoToWatch + queryStr} frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen style={{ position: 'absolute', top: '0', left: '0', width: '100%', height: '100%'}}></iframe></div>\r\n                }\r\n                if (this.props.shouldScrollToVideo) {\r\n                    window.scrollTo(0, this.videoRef.current.offsetTop);\r\n                }\r\n                return (\r\n                    <div className=\"SelectedHearing\">\r\n                        <div className=\"HearingSectionTitle\">\r\n                            <div>\r\n                                <p style={{float: 'left', color: '#999999'}}>Scroll down&nbsp;&nbsp;<i className=\"fas fa-chevron-down\"></i><i className=\"fas fa-chevron-down\"></i></p>\r\n                            </div>\r\n                            <h2 className=\"HearingSectionMainTitle\">{hearingTitleDate}</h2>\r\n                            <div>\r\n                                <p style={{float: 'right', color: '#999999'}}><i className=\"fas fa-chevron-down\"></i><i className=\"fas fa-chevron-down\"></i>&nbsp;&nbsp;Scroll down</p>\r\n                            </div>\r\n                        </div>\r\n                        {webcastLink}\r\n                        <div className=\"HearingInfo\">\r\n                            {topNotification}\r\n                            <div className=\"HearingTopSectionLayout\">\r\n                                <div>\r\n                                    <h3 className=\"HearingFormSectionTitle\">Location:</h3>\r\n                                    <p className={locationCss}>{buildingRoom}<br />{street}<br />{city}{locationNoneDefaultMsg}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <h3 className=\"HearingFormSectionTitle\">Transcript</h3>\r\n                                    {transcriptLink}\r\n                                </div>\r\n                                <div>\r\n                                    <h3 className=\"HearingFormSectionTitle\">Session Times:</h3>\r\n                                    <p className={timeCss}>Morning Session: {morningSession}<br />Afternoon Session: {afternoonSession}{timeNoneDefaultMsg}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <h3 className=\"HearingFormSectionTitle\">Videos</h3>\r\n                                    <div className=\"VideoListContainer\">\r\n                                        {videos}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <AnimateHeight duration={500} height={videoHeight}>\r\n                                {videoPlayer}\r\n                            </AnimateHeight>\r\n                            {notifications}\r\n                            <h2 className=\"HearingFormSectionTitle\">Themes</h2>\r\n                            {themesList}\r\n                            <h2 className=\"HearingFormSectionTitle\">Exhibits</h2>\r\n                            <div className=\"ExhibitElement\">\r\n                                {exhibitsList}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            return (\r\n                <div className=\"SelectedHearing\">\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hearing: state.selectedHearing,\r\n        isDev: state.isDev,\r\n        displayVideo: state.displayVideo,\r\n        videoToWatch: state.videoToWatch,\r\n        shouldScrollToVideo: state.scrollToVideo\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playVideo: (videoToWatch) => { dispatch(playVideoAction(videoToWatch)) },\r\n        showHideVideo: (showVideo) => { dispatch(showHideVideoAction(showVideo)) },\r\n        scrollToVideo: () => { dispatch(scrollToVideoAction()) }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedHearing);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Month from './components/Month';\r\nimport SelectedHearing from './components/SelectedHearing';\r\nimport * as CalendarType from './constants/calendarTypes';\r\nimport { initAppAction } from './actions/actions';\r\nimport { selectHearingAction } from './actions/actions';\r\nimport { showHearingAction } from './actions/actions';\r\nimport { playVideoAction } from './actions/actions';\r\nimport { showHideVideoAction } from './actions/actions';\r\nimport { scrollToVideoAction } from './actions/actions';\r\n\r\nconst axios = require('axios');\r\n\r\nclass App extends React.Component {\r\n\r\n  getUrlParameter(name) {\r\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n    var results = regex.exec(window.location.search);\r\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isInit) {\r\n      let mainHeight = 0;\r\n      if (this.props.displayHearing) {\r\n        mainHeight = 'auto';\r\n      }\r\n      let calendar = [];\r\n      let endTS = 0;\r\n      for (const hearingTS of this.props.hearings.keys()) {\r\n        endTS = (hearingTS > endTS) ? hearingTS : endTS;\r\n      }\r\n      let startDate = new Date(2020, 0, 1, 0, 0, 0, 0);\r\n      startDate.setDate(1);\r\n      let endDate = new Date(endTS);\r\n      let numMonths = (endDate.getFullYear() - startDate.getFullYear()) * 12;\r\n      numMonths -= startDate.getMonth() + 1;\r\n      numMonths += endDate.getMonth() + 2;  // Adds an extra month to allow for adding new dates beyond the last month.\r\n      numMonths = ((numMonths <= 3) ? 3 : numMonths) + 1;  // Make sure it always has three months.\r\n      let visibleSlides = (isMobile) ? 1 : 3;\r\n      let endOfCarousel = (isMobile) ? numMonths - visibleSlides - 2 : numMonths - visibleSlides - 1;  // Subtract 1 so that the carousel scrolls to the correct month.\r\n      for (let i = 0; i < numMonths; i++) {\r\n        let newDate = new Date(startDate)\r\n        newDate.setMonth(startDate.getMonth() + i);\r\n        calendar.push(<Slide index={i} key={newDate.getTime()}><Month date={newDate} calendarType={CalendarType.CALENDAR}></Month></Slide>);\r\n      }\r\n      let selectedHearingKey = \"NoHearing\";\r\n      if (this.props.selectedHearing !== null) {\r\n        selectedHearingKey = this.props.selectedHearing.timeStamp;\r\n      }\r\n      let isDevHeader = '';\r\n      if (this.props.isDev) {\r\n        isDevHeader = <h2 style={{ borderRadius: '5px', fontWeight: '800', fontSize: '4.7rem', textAlign: 'center', textTransform: 'uppercase', color: 'white', backgroundColor: '#6200ffc4', padding: '10px', position: 'absolute', top: '150px', left: '50%', textShadow: '0px 0px 20px black', transform: 'rotate(10deg) translate(-35%, 0%)', width: '850px' }}>TEST VERSION</h2>\r\n      }\r\n      return (\r\n        <div id=\"App\">\r\n          {isDevHeader}\r\n          <div className=\"HearingsCalendarApp\">\r\n            <CarouselProvider naturalSlideWidth={287} naturalSlideHeight={302} totalSlides={numMonths} visibleSlides={visibleSlides} currentSlide={endOfCarousel}>\r\n              <Slider>\r\n                {calendar}\r\n              </Slider>\r\n              <ButtonBack><i className=\"fas fa-chevron-left\"></i></ButtonBack>\r\n              <ButtonNext><i className=\"fas fa-chevron-right\"></i></ButtonNext>\r\n            </CarouselProvider>\r\n          </div>\r\n          <AnimateHeight duration={500} height={mainHeight}>\r\n            <SelectedHearing key={selectedHearingKey}></SelectedHearing>\r\n          </AnimateHeight>\r\n        </div>\r\n      );\r\n    } else {\r\n      let isDev = this.getUrlParameter('dev');\r\n      let url = '/data/hearings.json';\r\n      if (isDev === 't') {\r\n        url = '/dataDev/hearings.json';\r\n      }\r\n      axios.get(url)\r\n        .then((res) => {\r\n          this.props.initApp(res.data, isDev);\r\n          let preSelect = this.getUrlParameter('h');\r\n          if (preSelect !== '') {\r\n            let id = parseInt(preSelect);\r\n            if (isNaN(id) === false) {\r\n              this.props.selectHearing(id);\r\n              this.props.showHearing();\r\n            }\r\n          }\r\n          let videoIdQuery = this.getUrlParameter('v');\r\n          if (videoIdQuery !== '') {\r\n            let videoSession = '';\r\n            if (videoIdQuery === 'm') {\r\n              videoSession = this.props.selectedHearing.morningVideo;\r\n            } else if (videoIdQuery === 'a') {\r\n              videoSession = this.props.selectedHearing.afternoonVideo;\r\n            }\r\n            if (videoSession !== '') {\r\n              setTimeout(() => {\r\n                this.props.playVideo(videoSession);\r\n                this.props.showHideVideo(true);\r\n                this.props.scrollToVideo();\r\n              }, 500);\r\n            }\r\n          }\r\n        });\r\n      return (\r\n        <div id=\"App\">\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isInit: state.isInit,\r\n    isDev: state.isDev,\r\n    hearings: state.hearings,\r\n    selectedHearing: state.selectedHearing,\r\n    displayHearing: state.displayHearing\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    initApp: (hearingsData, isDev) => { dispatch(initAppAction(hearingsData, isDev)) },\r\n    selectHearing: (hearingId) => { dispatch(selectHearingAction(hearingId)) },\r\n    showHearing: () => { dispatch(showHearingAction()) },\r\n    playVideo: (videoToWatch) => { dispatch(playVideoAction(videoToWatch)) },\r\n    showHideVideo: (showVideo) => { dispatch(showHideVideoAction(showVideo)) },\r\n    scrollToVideo: () => { dispatch(scrollToVideoAction()) }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport main from './reducers/mainReducer';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(main, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\ndocument.getElementById('IEMessage').style.display = 'none';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}